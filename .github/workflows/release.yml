name: Release

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Full version tag (e.g., v1.1.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Create version tags and releases
        run: |
          # Use the input version tag
          VERSION=${{ github.event.inputs.version_tag }}
          echo "Processing release: $VERSION"

          # Extract major and minor version numbers
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)

          echo "Creating tags for major: v$MAJOR, minor: v$MAJOR.$MINOR"

          # Create all version tags simultaneously for identical timestamps
          # This prevents Renovate from preferring one version over another based on creation time
          git tag -a "v$MAJOR" -m "Release v$MAJOR" &&
          git tag -a "v$MAJOR.$MINOR" -m "Release v$MAJOR.$MINOR" &&

          # Push all tags simultaneously
          git push origin "v$MAJOR" "v$MAJOR.$MINOR" &&

          echo "Successfully created and pushed tags: v$MAJOR, v$MAJOR.$MINOR"

      - name: Create GitHub release with autogenerated notes
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version_tag | regex_replace('^v([0-9]+)\.([0-9]+)\.[0-9]+$', '$1.$2') }}
          release_name: Release v${{ github.event.inputs.version_tag | regex_replace('^v([0-9]+)\.([0-9]+)\.[0-9]+$', '$1.$2') }}
          generate_release_notes: true
          draft: false
          prerelease: false

      - name: Verify tags
        run: |
          echo "Verifying created tags:"
          git tag -l | grep -E "^v[0-9]" | sort -V
