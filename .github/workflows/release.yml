name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Minor version tag (e.g., v1.1) - leave empty for auto-increment'
        required: false
        type: string
        default: ''

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v5

      - name: Configure Git user
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

      - name: Set version variables
        run: |
          # Pick up the minor version from the input or...
          VERSION="${{ github.event.inputs.version }}"

          # Auto-increment the previous minor version
          if [ -z "$VERSION" ]; then
            LATEST_MINOR=$(git tag -l | grep -E "^v[0-9]+\.[0-9]+$" | sort -V | tail -1)
            if [ -z "$LATEST_MINOR" ]; then
              echo "ERROR: No existing minor version found."
              exit 1
            fi
            VERSION=$(echo $LATEST_MINOR | cut -d. -f1).$(($(echo $LATEST_MINOR | cut -d. -f2) + 1))
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Validate version doesn't exist
        run: |
          if gh release view "$VERSION" >/dev/null 2>&1; then
            echo "ERROR: Release $VERSION already exists!"
            exit 1
          fi
          echo "Version $VERSION is available for release"

      - name: Create version tags
        run: |
          # Create all version tags and push simultaneously (prevents Renovate timestamp confusion)
          MAJOR=$(echo $VERSION | cut -d. -f1)
          git tag -f -a "$VERSION" -m "Release $VERSION"
          git tag -f -a "$MAJOR" -m "Release $MAJOR (equivalent to $VERSION)"
          git push origin "$VERSION" "$MAJOR" --force

      - name: Create GitHub release
        run: |
          gh release create "$VERSION" --title "Release $VERSION" --generate-notes

      - name: Verify tags
        run: |
          echo "Verifying created tags:"
          git tag -l | grep -E "^v[0-9]" | sort -V
