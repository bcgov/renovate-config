{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "automerge": true,
  "configMigration": true,
  "dependencyDashboard": true,
  "description": "Default preset for use with Renovate's repos. Main Renovate configuration preset for downstream repositories. Extends shared and language-specific rules.",
  "extends": [
    "config:recommended",
    "docker:disableMajor",
    "group:definitelyTyped",
    "group:linters",
    "group:monorepos",
    "group:react",
    "group:recommended",
    ":automergeDigest",
    ":automergeLinters",
    ":automergeMinor",
    ":automergePatch",
    ":automergePr",
    ":automergeRequireAllStatusChecks",
    ":automergeTypes",
    ":combinePatchMinorReleases",
    ":enableVulnerabilityAlerts",
    ":maintainLockFilesMonthly",
    ":preserveSemverRanges",
    ":rebaseStalePrs",
    ":semanticCommits",
    ":semanticCommitScope(deps)",
    "github>bcgov/renovate-config:rules-actions.json5",
    "github>bcgov/renovate-config:rules-java.json5",
    "github>bcgov/renovate-config:rules-javascript.json5",
    "github>bcgov/renovate-config:rules-python.json5"
  ],
  "forkProcessing": "enabled",
  "ignorePresets": [
    ":ignoreModulesAndTests"
  ],
  "minimumReleaseAge": "7 days",
  "onboarding": true,
  "configWarningReuseIssue": true,
  "onboardingConfig": {
    "extends": [
      "github>bcgov/renovate-config"
    ]
  },
  "platform": "github",
  "platformAutomerge": true,
  "recreateWhen": "conflicted",
  "timezone": "America/Vancouver",
  "schedule": [
    "before 6am every weekday"
  ],
  "prConcurrentLimit": 2,
  "customManagers": [
    {
      "customType": "regex",
      "managerFilePatterns": ["/(^|/)renovate\\.json$/"],
      "matchStrings": [
        "\"(?<depName>github>bcgov/renovate-config)(?<currentValue>)\""
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "bcgov/renovate-config",
      "autoReplaceStringTemplate": "\"{{depName}}#{{newValue}}\""
    }
  ],
  "packageRules": [
    {
      "description": "Global pinning policy: Pin all digests/SHAs globally for supply chain security. This ensures reproducible builds and prevents dependency substitution attacks.",
      "matchManagers": [
        "gradle",
        "maven",
        "npm",
        "pip",
        "pipenv",
        "pnpm",
        "poetry",
        "uv",
        "yarn"
      ],
      "pinDigests": true
    },
    {
      "description": "Unpin containers: Docker images are handled by image tags rather than digests. Container registries provide their own security guarantees through signed tags.",
      "matchManagers": [
        "dockerfile",
        "docker-compose",
        "kubernetes"
      ],
      "pinDigests": false
    },
    {
      "description": "Unpin service containers: Service containers (like postgres, redis, etc.) are handled by image tags rather than digests. These are runtime dependencies that should use stable tags.",
      "matchDepTypes": [
        "service"
      ],
      "pinDigests": false
    },
    {
      "description": "Prevent config preset pinning: Stop Renovate from trying to pin bcgov/renovate-config as a dependency. Config presets are references, not dependencies that need pinning.",
      "matchPackageNames": [
        "github>bcgov/renovate-config"
      ],
      "matchUpdateTypes": [
        "pin"
      ],
      "enabled": false
    },
    {
      "description": "Enable preset version updates to v1 family: Allow bcgov/renovate-config updates to v1, v1.0, or v1.0.0 versions",
      "matchManagers": [
        "renovate-config-presets"
      ],
      "matchPackageNames": [
        "github>bcgov/renovate-config"
      ],
      "versioning": "loose",
      "allowedVersions": "/^v1$/",
      "enabled": true
    },
    {
      "description": "Block prerelease updates globally: Prevent updates to alpha, beta, rc, next, preview, dev, experimental versions across all package managers. These are unstable and should be avoided in production.",
      "matchCurrentVersion": "/.*-(alpha|beta|rc|next|preview|dev|experimental).*/",
      "matchManagers": []
    },
    {
      "description": "Group infrastructure providers: Combine Terraform, Docker, Kubernetes, Helm, and Docker Compose updates into single PRs. Infrastructure changes should be reviewed together for consistency.",
      "matchManagers": [
        "terraform",
        "dockerfile",
        "kubernetes",
        "helmv3",
        "docker-compose"
      ],
      "matchUpdateTypes": [
        "minor",
        "patch"
      ],
      "groupName": "infrastructure updates",
      "groupSlug": "infra"
    },
    {
      "description": "Group Node.js ecosystem: Combine npm, yarn, and pnpm updates into single PRs. JavaScript/TypeScript dependencies should be updated together to maintain compatibility.",
      "matchManagers": [
        "npm",
        "yarn",
        "pnpm"
      ],
      "matchUpdateTypes": [
        "minor",
        "patch"
      ],
      "groupName": "node dependencies",
      "groupSlug": "node"
    },
    {
      "description": "Group Java ecosystem: Combine Maven and Gradle updates into single PRs. Java dependencies should be updated together to maintain compatibility and avoid version conflicts.",
      "matchManagers": [
        "maven",
        "gradle"
      ],
      "matchUpdateTypes": [
        "minor",
        "patch"
      ],
      "groupName": "java dependencies",
      "groupSlug": "java"
    },
    {
      "description": "Group Python ecosystem: Combine pip, pipenv, poetry, and uv updates into single PRs. Python dependencies should be updated together to maintain compatibility and avoid conflicts.",
      "matchManagers": [
        "pip",
        "pipenv",
        "poetry",
        "uv"
      ],
      "matchUpdateTypes": [
        "minor",
        "patch"
      ],
      "groupName": "python dependencies",
      "groupSlug": "python"
    }
  ]
}
